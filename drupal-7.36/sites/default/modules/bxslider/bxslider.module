<?php
/**
 * @file It contains module hooks.
 */

// It loads helpers.
module_load_include('inc', 'bxslider', 'bxslider');
module_load_include('inc', 'bxslider', 'bxslider.form');

/**
 * Implements hook_menu.
 */
function bxslider_menu() {
  $items = array ();

  $items['bxslider/test'] = array (
    'title' => 'Test',
    'page callback' => 'bxslider_test_page',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_field_formatter_info().
 */
function bxslider_field_formatter_info() {
  return [
    'bxslider_formatter' => [
      'label' => t('bxSlider'),
      'field types' => ['image'],
      'settings'  => [
        'click_event' => '',
        'image_style' => 'large',
        'bxslider' => []
      ],
    ],
  ];
}

/**
 * Implements hook_field_formatter_settings_form.
 */
function bxslider_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];


  $style_options = [];
  foreach(image_styles() as $key => $style) {
    $style_options[$key] = $style['label'];
  }
  $element = [];
  $element['image_style'] = [
    '#title' => t('Image style'),
    '#type' => 'select',
    '#options' => $style_options,
    '#default_value' => $settings['image_style'] ? $settings['image_style'] : 'large',
  ];
  $element['click_event'] = [
    '#title' => t('Click event'),
    '#type' => 'textfield',
    '#default_value' => $settings['click_event'] ? $settings['click_event'] : '',
  ];
  $element['bxslider'] = array (
    '#type' => 'fieldset',
    '#title' => t('Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  ) + _bxslider_settings_form($settings['bxslider']);

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function bxslider_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('imageStyle=@imageStyle, slideWidth=@slideWidth, slideMargin=@slideMargin', array(
    '@imageStyle' => $settings['image_style'],
    '@slideWidth' => $settings['bxslider']['slideWidth'],
    '@slideMargin' => $settings['bxslider']['slideMargin'],
  ));

  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function bxslider_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array(); // Initialize the var
  $settings = $display['settings']; // get the settings

  $render_items = [];
  foreach ($items as $item) {
    $render_items[] = [
      '#type' => 'container',
      '#attributes' => [
        'onclick' => $settings['click_event'],
      ],
      'image' => [
        '#theme' => 'image_formatter',
        '#item' => [
          'uri' => $item['uri']
        ],
        '#image_style' => $settings['image_style'],
      ]
    ];
  }
  $source = _bxslider_get_render_source($render_items, $settings['bxslider'], _bxslider_get_increment_key());

  return $source;
}


/**
 * Implements hook_theme().
 */
function bxslider_theme() {
  return array(
    'bxslider_wrapper' => array(
      'template' => 'theme/bxslider-wrapper',
      'render element' => 'element',
     ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function bxslider_ctools_plugin_directory($module, $plugin) {
  if (in_array($module, array('ctools', 'panels')) && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_library_info.
 */
function bxslider_library() {
  $libraries_path = 'sites/all/libraries/';
  $libraries['bxslider'] = array(
    'title' => 'bxSlider',
    'website' => 'http://bxslider.com/',
    'version' => '4.1.1',
    'js' => array(
      $libraries_path . 'jquery.bxslider/jquery.bxslider.min.js' => array (),
    ),
    'css' => array(
      $libraries_path . 'jquery.bxslider/jquery.bxslider.css' => array (
        'type' => 'file',
        'media' => 'screen',
      ),
    ),
  );

  return $libraries;
}
