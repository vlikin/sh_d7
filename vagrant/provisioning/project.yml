- name: Installs php.
  apt:
    pkg: "{{ item }}"
    update_cache: true
  with_items:
  - php5-fpm
  - php5-cli
  - php5-mysql
  - php5-curl
  - php5-gd
  - nginx
  - mysql-server
  - python-mysqldb # For the ansible command - mysql_user
  - drush
  when: install

- name: Copies nginx vhost configuration in place.
  template:
    src: nginx-vh.j2
    dest: /etc/nginx/sites-available/{{ project_name }}
    owner: root
    group: root
    mode: 0644
  when: install

- name: Links the Virtual host.
  file:
    src: /etc/nginx/sites-available/{{ project_name }}
    dest: /etc/nginx/sites-enabled/{{ project_name }}
    owner: root
    group: root
    mode: 0644
    state: link
  notify:
    - Restart Nginx
  when: install

- name: Copies nginx SSL vhost configuration in place.
  template:
    src: nginx-ssl.j2
    dest: /etc/nginx/sites-available/ssl
    owner: root
    group: root
    mode: 0644
  when: install

- name: Links the SSL virtual host.
  file:
    src: /etc/nginx/sites-available/ssl
    dest: /etc/nginx/sites-enabled/ssl
    owner: root
    group: root
    mode: 0644
    state: link
  notify:
    - Restart Nginx
  when: install

- name: Creates database for the project.
  mysql_db:
    name: "{{ project_name }}"
    state: present
  when: install

- name: Updates MySQL root password for all root accounts
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_db_pass }}"
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  when: install

- name: Drupal database recover.
  shell: drush sqlq --file={{ site_path }}/dumps/vagrant.sql
  args:
    chdir: "{{ site_path }}"
    sudo_user: www-data
  when: install

- name: Install Drupal.
  shell: drush upwd -y {{ site_user }} --password={{ site_pass }}
  args:
    chdir: "{{ site_path }}"
    sudo: yes
    sudo_user: www-data
  when: install